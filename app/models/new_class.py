# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new_class.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import sqlite3
from .storage.studentdb import DB
DB = DB()

class Ui_add_class(object):
    def setupUi(self, add_class):
        add_class.setObjectName("add_class")
        add_class.resize(459, 322)
        add_class.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.std_entry_form = QtWidgets.QGroupBox(add_class)
        self.std_entry_form.setGeometry(QtCore.QRect(50, 0, 311, 181))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.std_entry_form.setFont(font)
        self.std_entry_form.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.std_entry_form.setObjectName("std_entry_form")
        self.formLayoutWidget = QtWidgets.QWidget(self.std_entry_form)
        self.formLayoutWidget.setGeometry(QtCore.QRect(0, 30, 301, 150))
        self.formLayoutWidget.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setObjectName("lineEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit)
        self.block_label = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.block_label.setFont(font)
        self.block_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.block_label.setObjectName("block_label")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.block_label)
        self.block_input = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.block_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.block_input.setObjectName("block_input")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.block_input)
        self.room_label = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.room_label.setFont(font)
        self.room_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.room_label.setObjectName("room_label")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.room_label)
        self.room_input = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.room_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.room_input.setObjectName("room_input")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.room_input)
        self.tuition_label = QtWidgets.QLabel(self.formLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tuition_label.setFont(font)
        self.tuition_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.tuition_label.setObjectName("tuition_label")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.tuition_label)
        self.tuition_input = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.tuition_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tuition_input.setObjectName("tuition_input")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.tuition_input)
        self.frame = QtWidgets.QFrame(add_class)
        self.frame.setGeometry(QtCore.QRect(30, 220, 391, 80))
        self.frame.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.frame)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 0, 361, 80))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.create_button = QtWidgets.QPushButton(self.horizontalLayoutWidget,
                                                   clicked=lambda: self.create_class())
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.create_button.setFont(font)
        self.create_button.setStyleSheet("background-color: rgb(125, 205, 127);")
        self.create_button.setObjectName("create_button")
        self.horizontalLayout.addWidget(self.create_button)
        self.reset_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.reset_button.setFont(font)
        self.reset_button.setStyleSheet("background-color: rgb(125, 205, 127);")
        self.reset_button.setObjectName("reset_button")
        self.horizontalLayout.addWidget(self.reset_button)

        self.retranslateUi(add_class)
        QtCore.QMetaObject.connectSlotsByName(add_class)

    def retranslateUi(self, add_class):
        _translate = QtCore.QCoreApplication.translate
        add_class.setWindowTitle(_translate("add_class", "Create Class"))
        self.std_entry_form.setTitle(_translate("add_class", "Class details"))
        self.label.setText(_translate("add_class", "Class name:"))
        self.block_label.setText(_translate("add_class", "Block:"))
        self.room_label.setText(_translate("add_class", "Room:"))
        self.tuition_label.setText(_translate("add_class", "Tuition:"))
        self.create_button.setText(_translate("add_class", "Create Class"))
        self.reset_button.setText(_translate("add_class", "Reset"))

    # Create new class
    def create_class(self):
        try:
            # select data from tables
            conn = DB.create_connection()
            c = conn.cursor()

            # Get parent data from input fields
            grade = self.lineEdit.text().upper()
            block = self.block_input.text().upper()
            room = self.room_input.text()
            tuition = self.tuition_input.text()

            # Put data into tuples
            # Parent data
            rows_classes = (grade, block, room, tuition)

            # check whether parent already exists
            # if exists don't add to table else add parent and student to db
            c.execute("SELECT grade, room FROM classes WHERE grade = ? OR room = ?", (grade, room))
            chk = c.fetchall()

            if len(chk) == 0:
                # write student data to database
                DB.insert_data("classes", rows_classes)

                # success message box
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setWindowTitle("Student Management System")
                msg.setText("Class created successfully")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()
            else:
                # Ask user to confirm addition of existing parent
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Warning)
                msg.setWindowTitle("Student management System")
                msg.setText("Class/room# already exists\n do you wish to continue?")
                msg.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
                res = msg.exec_()

                if res == QMessageBox.Yes:
                    # continue with adding student data
                    DB.insert_data("classes", rows_classes)
                    # success message box
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Information)
                    msg.setWindowTitle("Student Management System")
                    msg.setText("Class created successfully")
                    msg.setStandardButtons(QMessageBox.Ok)
                    msg.exec_()

        except Exception as e:
            print(e)
            print("Something went wrong in creating a class")


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    add_class = QtWidgets.QWidget()
    ui = Ui_add_class()
    ui.setupUi(add_class)
    add_class.show()
    sys.exit(app.exec_())
