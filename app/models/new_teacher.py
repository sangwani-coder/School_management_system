# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new_teacher.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import sqlite3
from .storage.studentdb import DB

CLASSES = []
DB = DB()
conn = DB.create_connection()
c = conn.cursor()
c.execute("SELECT grade FROM classes")
data = c.fetchall()

if len(data) != 0:
    for i in data:
        CLASSES.append(i)
else:
    CLASSES = ['None', 'None', 'None', 'None']

class Ui_new_teacher(object):
    def setupUi(self, new_teacher):
        new_teacher.setObjectName("new_teacher")
        new_teacher.resize(598, 314)
        new_teacher.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.prt_enrty_form = QtWidgets.QGroupBox(new_teacher)
        self.prt_enrty_form.setGeometry(QtCore.QRect(140, 0, 351, 241))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.prt_enrty_form.setFont(font)
        self.prt_enrty_form.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.prt_enrty_form.setObjectName("prt_enrty_form")
        self.formLayoutWidget_2 = QtWidgets.QWidget(self.prt_enrty_form)
        self.formLayoutWidget_2.setGeometry(QtCore.QRect(10, 30, 331, 181))
        self.formLayoutWidget_2.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.formLayoutWidget_2.setObjectName("formLayoutWidget_2")
        self.formLayout_2 = QtWidgets.QFormLayout(self.formLayoutWidget_2)
        self.formLayout_2.setContentsMargins(0, 0, 0, 0)
        self.formLayout_2.setObjectName("formLayout_2")
        self.title_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.title_label.setFont(font)
        self.title_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.title_label.setObjectName("title_label")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.title_label)
        self.firstname_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.firstname_label.setFont(font)
        self.firstname_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.firstname_label.setObjectName("firstname_label")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.firstname_label)
        self.firstname_input = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.firstname_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.firstname_input.setObjectName("firstname_input")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.firstname_input)
        self.surname_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.surname_label.setFont(font)
        self.surname_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.surname_label.setObjectName("surname_label")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.surname_label)
        self.surname_input = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.surname_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.surname_input.setObjectName("surname_input")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.surname_input)
        self.mobile_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.mobile_label.setFont(font)
        self.mobile_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.mobile_label.setObjectName("mobile_label")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.mobile_label)
        self.email_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.email_label.setFont(font)
        self.email_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.email_label.setObjectName("email_label")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.email_label)
        self.class_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.class_label.setFont(font)
        self.class_label.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.class_label.setObjectName("class_label")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.class_label)
        self.assign_class_combo = QtWidgets.QComboBox(self.formLayoutWidget_2)
        self.assign_class_combo.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.assign_class_combo.setObjectName("assign_class_combo")
        self.assign_class_combo.addItem('', CLASSES[0][0])
        self.assign_class_combo.addItem('', CLASSES[1][0])
        self.assign_class_combo.addItem('', CLASSES[2][0])
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.assign_class_combo)
        self.title_combo_box = QtWidgets.QComboBox(self.formLayoutWidget_2)
        self.title_combo_box.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.title_combo_box.setObjectName("title_combo_box")
        self.title_combo_box.addItem('', "Mrs.")
        self.title_combo_box.addItem('', "Miss.")
        self.title_combo_box.addItem('', "Mr.")
        self.title_combo_box.addItem('', "Ms.")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.title_combo_box)
        self.email_input = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.email_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.email_input.setObjectName("email_input")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.email_input)
        self.mobile_input = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.mobile_input.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.mobile_input.setObjectName("mobile_input")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.mobile_input)
        self.frame = QtWidgets.QFrame(new_teacher)
        self.frame.setGeometry(QtCore.QRect(40, 250, 551, 80))
        self.frame.setStyleSheet("background-color: rgb(119, 171, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.frame)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 0, 531, 80))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.add_teacher_button = QtWidgets.QPushButton(self.horizontalLayoutWidget,
                                                        clicked=lambda: self.add_teacher_info())
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.add_teacher_button.setFont(font)
        self.add_teacher_button.setStyleSheet("background-color: rgb(125, 205, 127);")
        self.add_teacher_button.setObjectName("add_teacher_button")
        self.horizontalLayout.addWidget(self.add_teacher_button)
        self.reset_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.reset_button.setFont(font)
        self.reset_button.setStyleSheet("background-color: rgb(125, 205, 127);")
        self.reset_button.setObjectName("reset_button")
        self.horizontalLayout.addWidget(self.reset_button)
        self.preview_button = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.preview_button.setFont(font)
        self.preview_button.setStyleSheet("background-color: rgb(125, 205, 127);")
        self.preview_button.setObjectName("preview_button")
        self.horizontalLayout.addWidget(self.preview_button)

        self.retranslateUi(new_teacher)
        QtCore.QMetaObject.connectSlotsByName(new_teacher)

    def retranslateUi(self, new_teacher):
        _translate = QtCore.QCoreApplication.translate
        new_teacher.setWindowTitle(_translate("new_teacher", "Add Teacher"))
        self.prt_enrty_form.setTitle(_translate("new_teacher", "Teacher Details"))
        self.title_label.setText(_translate("new_teacher", "Title:"))
        self.firstname_label.setText(_translate("new_teacher", "First name:"))
        self.surname_label.setText(_translate("new_teacher", "Surname:"))
        self.mobile_label.setText(_translate("new_teacher", "Mobile:"))
        self.email_label.setText(_translate("new_teacher", "Email:"))
        self.class_label.setText(_translate("new_teacher", "Class:"))
        self.add_teacher_button.setText(_translate("new_teacher", "Add"))
        self.reset_button.setText(_translate("new_teacher", "Reset"))
        self.preview_button.setText(_translate("new_teacher", "Preview"))
        self.title_combo_box.setItemText(0, _translate("AddStudentForm", "Mrs"))
        self.title_combo_box.setItemText(1, _translate("AddStudentForm", "Miss"))
        self.title_combo_box.setItemText(2, _translate("AddStudentForm", "Mr"))
        self.title_combo_box.setItemText(3, _translate("AddStudentForm", "Ms"))
        self.assign_class_combo.setItemText(0, _translate("AddStudentForm", CLASSES[0][0]))
        self.assign_class_combo.setItemText(1, _translate("AddStudentForm", CLASSES[1][0]))
        self.assign_class_combo.setItemText(2, _translate("AddStudentForm", CLASSES[2][0]))

    # Add teachers to database
    def add_teacher_info(self):
        try:
            # select data from tables
            conn = DB.create_connection()
            c = conn.cursor()

            # Get parent data from input fields
            title = f"{self.title_combo_box.currentData()}".upper()
            firstname = self.firstname_input.text().upper()
            surname = self.surname_input.text()
            mobile = self.mobile_input.text()
            email = self.email_input.text()
            class_room = f"{self.assign_class_combo.currentData()}".upper()
            # teacher_id = c.execute("SELECT id FROM teachers")
            teacher = title + surname
            c.execute("SELECT id FROM classes WHERE grade = ?", (class_room,))
            res = c.fetchall()
            class_id = res[0][0]

            # Put data into tuples
            # Parent data
            rows_teacher = (title, class_id, firstname, surname, mobile, email, class_room)

            # check whether parent already exists
            # if exists don't add to table else add parent and student to db
            conn = DB.create_connection()
            c = conn.cursor()
            c.execute("SELECT firstname, surname, class FROM teachers WHERE firstname = ? AND surname = ? AND class=?",
                      (firstname, surname, class_room))
            chk = c.fetchall()

            if len(chk) == 0:
                # write student data to database
                db.insert_data("teacher", rows_teacher)
                c.execute("UPDATE classes SET teacher = ? WHERE grade = ? ", (teacher, class_room))
                conn.commit()

                # success message box
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setWindowTitle("Student Management System")
                msg.setText("Teacher data Successfully added")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()
            else:
                # Ask user to confirm addition of existing parent
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Warning)
                msg.setWindowTitle("Student management System")
                msg.setText("Teacher/class already exists! \n do you wish to continue?")
                msg.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
                res = msg.exec_()

                if res == QMessageBox.Yes:
                    # continue with adding student data
                    db.insert_data("teacher", rows_teacher)
                    c.execute("UPDATE classes SET teacher = ? WHERE grade = ? ", (teacher, class_room))
                    conn.commit()
                    # success message box
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Information)
                    msg.setWindowTitle("Student Management System")
                    msg.setText("Teacher Successfully added")
                    msg.setStandardButtons(QMessageBox.Ok)
                    msg.exec_()
        except Exception as e:
            print(e)
            print("Something went wrong in adding teacher")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    new_teacher = QtWidgets.QWidget()
    ui = Ui_new_teacher()
    ui.setupUi(new_teacher)
    new_teacher.show()
    sys.exit(app.exec_())
